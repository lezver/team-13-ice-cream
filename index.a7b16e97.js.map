{"mappings":"AAAe,IAAIA,OAAO,kBAAmB,CAC3CC,cAAe,EACfC,aAAc,GACdC,MAAM,EACNC,eAAe,EACfC,WAAY,EACZC,YAAY,EAEZC,YAAa,CACX,IAAK,CACHL,cAAc,IAEhB,IAAK,CACHA,cAAc,KAEhB,IAAK,CACHA,aAAc,GAEhB,KAAM,CACJA,cAAc,KAEhB,KAAM,CACJA,cAAc,IACdG,WAAY,IAIhBG,WAAY,CACVC,GAAI,qBACJC,KAAM,UACNC,WAAW,GAIbC,UAAW,CACTH,GAAI,qBAGNI,SAAU,CACRC,MAAO,IACPC,iBAAiB,EACjBC,sBAAsB,KAIJ,IAAIhB,OAAO,kBAAmB,CAClDiB,MAAO,IACPhB,cAAe,EACfC,aAAc,GACdC,MAAM,EACNe,OAAQ,OACRd,eAAe,EACfC,WAAY,EACZC,YAAY,EAGZM,UAAW,CACTH,GAAI,qBAGNI,SAAU,CACRC,MAAO,IACPC,iBAAiB,EACjBC,sBAAsB,KC/DzB,IAAWG,EACV,mBADUA,EAyBTC,OAAOC,QAAQC,WAxBOC,UACpBJ,EAAEI,QACDJ,EAAEK,mBACFL,EAAEM,oBACFN,EAAEO,uBACF,SAAUC,GACR,IACE,IAAIC,EAAIC,KACNC,GAAKF,EAAEG,UAAYH,EAAEI,eAAeC,iBAAiBN,GACrDO,EAAI,EACNJ,EAAEI,IAAMJ,EAAEI,KAAON,KAGfM,EACJ,OAAOC,QAAQL,EAAEI,G,GAErB,mBAAqBf,EAAEiB,UACpBjB,EAAEiB,QAAU,SAAUT,GACrB,IAAK,IAAIC,EAAIC,KAAMD,GAAK,IAAMA,EAAES,UAAY,CAC1C,GAAIT,EAAEL,QAAQI,GAAI,OAAOC,EACzBA,EAAIA,EAAEU,U,CAER,OAAO,I,GAIfP,SAASQ,iBAAiB,oBAAoB,W,kDAGxCC,EAAeT,SAASU,cAAiB,qBAC3CC,EAAkBX,SAACE,iBAAc,mBAGnCU,EAAAC,SAA8B,SACRC,GACpBA,EAAAN,iBAAA,kBACIZ,G,yDAQYI,SAAKU,cAAa,sBAClBK,EAAS,M,wBAOcN,EAARO,UAAVC,IAAJ,S,OAI0BN,EAAbE,SAAR,SAAVC,GAC6BA,EAALN,iBAAjB,SAAT,SAAVZ,GACqBE,KAALO,QAAR,UAEmBW,UAAVE,OAAP,UAC6BT,EAARO,UAAVE,OAAP,S,OAI6BlB,SAATmB,KAALX,iBACY,SACA,SAAVZ,GAGH,IAFCA,EAAFwB,UAGUpB,SAATU,cAAd,iBAAjBM,UAAQE,OAAO,UACyBlB,SAATU,cAAd,YAAZM,UAAFE,OAAO,U,IAGkC,GAGET,EAARD,iBAAjB,SAAT,WACgCR,SAATU,cAAd,iBAAjBM,UAAAE,OAAO,UACiCpB,KAALkB,UAAVE,OAAP,S,OCjFvB,MAAMG,EAAOrB,SAASU,cAAc,SAC9BY,EAAQtB,SAASU,cAAc,UAC/Ba,EAAOvB,SAASmB,KAGhBK,EAAOxB,SAASU,cAAc,SAASe,UAAU,GAG5BJ,EAAtBb,iBAAiB,SAGG,SAAJZ,GACnBA,EAAE8B,iBAE+BJ,EAA3BN,UAAUW,OAAO,QACvBN,EAAKL,UAAUW,OAAO,UACtBJ,EAAKP,UAAUW,OAAO,YAMtBL,EAAMM,YAAYJ,E,IAYpB,SAASK,IACPP,EAAMN,UAAUE,OAAO,QACvBG,EAAKL,UAAUE,OAAO,UACtBK,EAAKP,UAAUE,OAAO,W,CAXVY,MAAMC,KAAKP,EAAKQ,UAGxBnB,SAASoB,IACbA,EAAKzB,iBAAiB,QAASqB,EAAa","sources":["src/js/slider.js","src/js/modal.js","src/js/burger.js"],"sourcesContent":["const swiper = new Swiper('.swiper-reviews', {\n  slidesPerView: 1,\n  spaceBetween: 10,\n  loop: true,\n  simulateTouch: true,\n  touchRatio: 2,\n  grabCursor: true,\n\n  breakpoints: {\n    480: {\n      spaceBetween: -95,\n    },\n    610: {\n      spaceBetween: -160,\n    },\n    768: {\n      spaceBetween: 0,\n    },\n    1200: {\n      spaceBetween: -100,\n    },\n    1440: {\n      spaceBetween: -200,\n      touchRatio: 3,\n    },\n  },\n  // If we need pagination\n  pagination: {\n    el: '.swiper-pagination',\n    type: 'bullets',\n    clickable: true,\n  },\n\n  // And if we need scrollbar\n  scrollbar: {\n    el: '.swiper-scrollbar',\n  },\n\n  autoplay: {\n    delay: 4000,\n    stopOnLastSlide: false,\n    disableOnInteraction: true,\n  },\n});\n\nconst swiperGallery = new Swiper('.swiper-gallery', {\n  speed: 750,\n  slidesPerView: 1,\n  spaceBetween: 10,\n  loop: true,\n  effect: 'fade',\n  simulateTouch: true,\n  touchRatio: 3,\n  grabCursor: true,\n\n  // And if we need scrollbar\n  scrollbar: {\n    el: '.swiper-scrollbar',\n  },\n\n  autoplay: {\n    delay: 4000,\n    stopOnLastSlide: false,\n    disableOnInteraction: false,\n  },\n});\n","!(function (e) {\n  'function' != typeof e.matches &&\n    (e.matches =\n      e.msMatchesSelector ||\n      e.mozMatchesSelector ||\n      e.webkitMatchesSelector ||\n      function (e) {\n        for (\n          var t = this,\n            o = (t.document || t.ownerDocument).querySelectorAll(e),\n            n = 0;\n          o[n] && o[n] !== t;\n\n        )\n          ++n;\n        return Boolean(o[n]);\n      }),\n    'function' != typeof e.closest &&\n      (e.closest = function (e) {\n        for (var t = this; t && 1 === t.nodeType; ) {\n          if (t.matches(e)) return t;\n          t = t.parentNode;\n        }\n        return null;\n      });\n})(window.Element.prototype);\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  /* Записываем в переменные массив элементов-кнопок и подложку.\n      Подложке зададим id, чтобы не влиять на другие элементы с классом overlay*/\n  var modalButtons = document.querySelectorAll('.js-open-modal'),\n    overlay = document.querySelector('.js-overlay-modal'),\n    closeButtons = document.querySelectorAll('.js-modal-close');\n\n  /* Перебираем массив кнопок */\n  modalButtons.forEach(function (item) {\n    /* Назначаем каждой кнопке обработчик клика */\n    item.addEventListener('click', function (e) {\n      /* Предотвращаем стандартное действие элемента. Так как кнопку разные\n            люди могут сделать по-разному. Кто-то сделает ссылку, кто-то кнопку.\n            Нужно подстраховаться. */\n      e.preventDefault();\n\n      /* При каждом клике на кнопку мы будем забирать содержимое атрибута data-modal\n            и будем искать модальное окно с таким же атрибутом. */\n      var modalId = this.getAttribute('data-modal'),\n        modalElem = document.querySelector(\n          '.modal[data-modal=\"' + modalId + '\"]'\n        );\n\n      /* После того как нашли нужное модальное окно, добавим классы\n            подложке и окну чтобы показать их. */\n      modalElem.classList.add('active');\n      overlay.classList.add('active');\n    }); // end click\n  }); // end foreach\n\n  closeButtons.forEach(function (item) {\n    item.addEventListener('click', function (e) {\n      var parentModal = this.closest('.modal');\n\n      parentModal.classList.remove('active');\n      overlay.classList.remove('active');\n    });\n  }); // end foreach\n\n  document.body.addEventListener(\n    'keyup',\n    function (e) {\n      var key = e.keyCode;\n\n      if (key == 27) {\n        document.querySelector('.modal.active').classList.remove('active');\n        document.querySelector('.overlay').classList.remove('active');\n      }\n    },\n    false\n  );\n\n  overlay.addEventListener('click', function () {\n    document.querySelector('.modal.active').classList.remove('active');\n    this.classList.remove('active');\n  });\n}); // end ready\n","const hamb = document.querySelector(\"#hamb\");\nconst popup = document.querySelector(\"#popup\");\nconst body = document.body;\n\n// Клонируем меню, чтобы задать свои стили для мобильной версии\nconst menu = document.querySelector(\"#menu\").cloneNode(1);\n\n// При клике на иконку hamb вызываем ф-ию hambHandler\nhamb.addEventListener(\"click\", hambHandler);\n\n// Выполняем действия при клике ..\nfunction hambHandler(e) {\n  e.preventDefault();\n  // Переключаем стили элементов при клике\n  popup.classList.toggle(\"open\");\n  hamb.classList.toggle(\"active\");\n  body.classList.toggle(\"noscroll\");\n  renderPopup();\n}\n\n// Здесь мы рендерим элементы в наш попап\nfunction renderPopup() {\n  popup.appendChild(menu);\n}\n\n// Код для закрытия меню при нажатии на ссылку\nconst links = Array.from(menu.children);\n\n// Для каждого элемента меню при клике вызываем ф-ию\nlinks.forEach((link) => {\n  link.addEventListener(\"click\", closeOnClick);\n});\n\n// Закрытие попапа при клике на меню\nfunction closeOnClick() {\n  popup.classList.remove(\"open\");\n  hamb.classList.remove(\"active\");\n  body.classList.remove(\"noscroll\");\n}"],"names":["Swiper","slidesPerView","spaceBetween","loop","simulateTouch","touchRatio","grabCursor","breakpoints","pagination","el","type","clickable","scrollbar","autoplay","delay","stopOnLastSlide","disableOnInteraction","speed","effect","e1","window","Element","prototype","matches","msMatchesSelector","mozMatchesSelector","webkitMatchesSelector","e","t","this","o","document","ownerDocument","querySelectorAll","n","Boolean","closest","nodeType","parentNode","addEventListener","overlay","querySelector","closeButtons","modalButtons","forEach","item","modalId","classList","add","remove","body","keyCode","$63c3e220268f76eb$var$hamb","$63c3e220268f76eb$var$popup","$63c3e220268f76eb$var$body","$63c3e220268f76eb$var$menu","cloneNode","preventDefault","toggle","appendChild","$63c3e220268f76eb$var$closeOnClick","Array","from","children","link"],"version":3,"file":"index.a7b16e97.js.map"}